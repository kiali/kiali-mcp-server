[
  {
    "annotations": {
      "title": "Graph: Mesh status",
      "readOnlyHint": true,
      "destructiveHint": false,
      "idempotentHint": false,
      "openWorldHint": true
    },
    "description": "Check the status of my mesh by querying Kiali graph",
    "inputSchema": {
      "type": "object",
      "properties": {
        "namespace": {
          "description": "Optional single namespace to include in the graph (alternative to namespaces)",
          "type": "string"
        },
        "namespaces": {
          "description": "Optional comma-separated list of namespaces to include in the graph",
          "type": "string"
        }
      }
    },
    "name": "graph"
  },
  {
    "annotations": {
      "title": "Namespaces: List",
      "readOnlyHint": true,
      "destructiveHint": false,
      "idempotentHint": true,
      "openWorldHint": true
    },
    "description": "Get all namespaces in the mesh that the user has access to",
    "inputSchema": {
      "type": "object"
    },
    "name": "namespaces"
  },
  {
    "annotations": {
      "title": "Service: Details",
      "readOnlyHint": true,
      "destructiveHint": false,
      "idempotentHint": true,
      "openWorldHint": true
    },
    "description": "Get detailed information for a specific service in a namespace, including validation, health status, and configuration",
    "inputSchema": {
      "type": "object",
      "properties": {
        "namespace": {
          "description": "Namespace containing the service",
          "type": "string"
        },
        "service": {
          "description": "Name of the service to get details for",
          "type": "string"
        }
      },
      "required": [
        "namespace",
        "service"
      ]
    },
    "name": "service_details"
  },
  {
    "annotations": {
      "title": "Services: List",
      "readOnlyHint": true,
      "destructiveHint": false,
      "idempotentHint": true,
      "openWorldHint": true
    },
    "description": "Get all services in the mesh across specified namespaces with health and Istio resource information",
    "inputSchema": {
      "type": "object",
      "properties": {
        "namespaces": {
          "description": "Comma-separated list of namespaces to get services from (e.g. 'bookinfo' or 'bookinfo,default'). If not provided, will list services from all accessible namespaces",
          "type": "string"
        }
      }
    },
    "name": "services_list"
  },
  {
    "annotations": {
      "title": "Validations: List",
      "readOnlyHint": true,
      "destructiveHint": false,
      "idempotentHint": false,
      "openWorldHint": true
    },
    "description": "List all the validations in the current cluster from all namespaces",
    "inputSchema": {
      "type": "object",
      "properties": {
        "namespace": {
          "description": "Optional single namespace to retrieve validations from (alternative to namespaces)",
          "type": "string"
        },
        "namespaces": {
          "description": "Optional comma-separated list of namespaces to retrieve validations from",
          "type": "string"
        }
      }
    },
    "name": "validations_list"
  },
  {
    "annotations": {
      "title": "Workload: Details",
      "readOnlyHint": true,
      "destructiveHint": false,
      "idempotentHint": true,
      "openWorldHint": true
    },
    "description": "Get detailed information for a specific workload in a namespace, including validation, health status, and configuration",
    "inputSchema": {
      "type": "object",
      "properties": {
        "namespace": {
          "description": "Namespace containing the workload",
          "type": "string"
        },
        "workload": {
          "description": "Name of the workload to get details for",
          "type": "string"
        }
      },
      "required": [
        "namespace",
        "workload"
      ]
    },
    "name": "workload_details"
  },
  {
    "annotations": {
      "title": "Workloads: List",
      "readOnlyHint": true,
      "destructiveHint": false,
      "idempotentHint": true,
      "openWorldHint": true
    },
    "description": "Get all workloads in the mesh across specified namespaces with health and Istio resource information",
    "inputSchema": {
      "type": "object",
      "properties": {
        "namespaces": {
          "description": "Comma-separated list of namespaces to get workloads from (e.g. 'bookinfo' or 'bookinfo,default'). If not provided, will list workloads from all accessible namespaces",
          "type": "string"
        }
      }
    },
    "name": "workloads_list"
  }
]

